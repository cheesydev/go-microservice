// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product.proto

package product

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Rating struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rating) Reset()         { *m = Rating{} }
func (m *Rating) String() string { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()    {}
func (*Rating) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{1}
}

func (m *Rating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rating.Unmarshal(m, b)
}
func (m *Rating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rating.Marshal(b, m, deterministic)
}
func (m *Rating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rating.Merge(m, src)
}
func (m *Rating) XXX_Size() int {
	return xxx_messageInfo_Rating.Size(m)
}
func (m *Rating) XXX_DiscardUnknown() {
	xxx_messageInfo_Rating.DiscardUnknown(m)
}

var xxx_messageInfo_Rating proto.InternalMessageInfo

func (m *Rating) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Product)(nil), "Product")
	proto.RegisterType((*Rating)(nil), "Rating")
}

func init() {
	proto.RegisterFile("product.proto", fileDescriptor_f0fd8b59378f44a5)
}

var fileDescriptor_f0fd8b59378f44a5 = []byte{
	// 117 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x28, 0xca, 0x4f,
	0x29, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe4, 0x62, 0x0f, 0x80, 0x08,
	0x08, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x31, 0x65, 0xa6,
	0x28, 0xc9, 0x71, 0xb1, 0x05, 0x25, 0x96, 0x64, 0xe6, 0xa5, 0x0b, 0x89, 0x70, 0xb1, 0x96, 0x25,
	0xe6, 0x94, 0xa6, 0x42, 0x25, 0x21, 0x1c, 0x23, 0x6d, 0x2e, 0x76, 0x88, 0x7c, 0xb1, 0x90, 0x02,
	0x17, 0xa7, 0x7b, 0x6a, 0x09, 0x54, 0x35, 0x87, 0x1e, 0xd4, 0x44, 0x29, 0x76, 0x3d, 0x88, 0x90,
	0x12, 0x43, 0x12, 0x1b, 0xd8, 0x3a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x99, 0xfb,
	0x30, 0x7f, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RatingsClient is the client API for Ratings service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RatingsClient interface {
	GetRating(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Rating, error)
}

type ratingsClient struct {
	cc grpc.ClientConnInterface
}

func NewRatingsClient(cc grpc.ClientConnInterface) RatingsClient {
	return &ratingsClient{cc}
}

func (c *ratingsClient) GetRating(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Rating, error) {
	out := new(Rating)
	err := c.cc.Invoke(ctx, "/Ratings/GetRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RatingsServer is the server API for Ratings service.
type RatingsServer interface {
	GetRating(context.Context, *Product) (*Rating, error)
}

// UnimplementedRatingsServer can be embedded to have forward compatible implementations.
type UnimplementedRatingsServer struct {
}

func (*UnimplementedRatingsServer) GetRating(ctx context.Context, req *Product) (*Rating, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRating not implemented")
}

func RegisterRatingsServer(s *grpc.Server, srv RatingsServer) {
	s.RegisterService(&_Ratings_serviceDesc, srv)
}

func _Ratings_GetRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingsServer).GetRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ratings/GetRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingsServer).GetRating(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ratings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ratings",
	HandlerType: (*RatingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRating",
			Handler:    _Ratings_GetRating_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product.proto",
}
